<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctl="clr-namespace:DoctorProxy.Control">

  

    <ControlTemplate x:Key="tmpMainLinkButton" TargetType="{x:Type ctl:LinkButton}">
        <Grid>
            <Border x:Name="Border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />

            <Border Padding="{TemplateBinding Padding}">
                <Grid VerticalAlignment="Center">
                    <Image Name="ctlImage" Width="16" Height="16" Margin="10,5,5,5" VerticalAlignment="Center" HorizontalAlignment="Left" Source="{TemplateBinding Icon}" />
                    <Label Margin="28,0,0,0" Content="{TemplateBinding Caption}" Background="Transparent" Foreground="{TemplateBinding Foreground}"  FontWeight="{TemplateBinding FontWeight}"/>
                </Grid>
            </Border>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#e6e6e6"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#ADADAD"/>
            </Trigger>
            <Trigger Property="Selected" Value="True">
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter TargetName="ctlImage" Property="Source" Value="{Binding HoverIcon, RelativeSource={RelativeSource FindAncestor, AncestorType=ctl:LinkButton}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--_____________________________________________________________________________________________________________________________________________-->


    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                               StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="#dddddd"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="8,7,8,10"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="BorderBrush" Value="#707070"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />

                        <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <!--<Setter Property="OpacityMask" Value="#AA888888"/>-->
                            <Setter Property="Background" Value="#FFD0E7F5"/>
                            <!--<Setter Property="Margin" Value="2 1" />-->
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#3c7fb1"/>
                            <Setter Property="Background" Value="#e8f5fd"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#f4f4f4"/>
                            <Setter Property="BorderBrush" Value="#adb2b5"/>
                            <Setter Property="Foreground" Value="#838383"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    

    <Style x:Key="Icons" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="0"/>
    </Style>

    <Style x:Key="Labels" TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="20,0,0,0"/>
        <Setter Property="Foreground" Value="{Binding Foreground,RelativeSource= {RelativeSource FindAncestor,AncestorType=Button},FallbackValue=Foreground}"/>
        <Setter Property="FontWeight" Value="{Binding FontWeight,RelativeSource= {RelativeSource FindAncestor,AncestorType=Button},FallbackValue=FontWeight}"/>
    </Style>

  

    <Style x:Key="LinkButton" TargetType="{x:Type ctl:LinkButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="#f5f5f5"/>
        <Setter Property="Foreground" Value="#414a53"/>
        <Setter Property="Opacity" Value="0.9"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="10 5"/>
        <Setter Property="FontSize" Value="15" />
        <Setter Property="DockPanel.Dock" Value="Top" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template" Value="{StaticResource tmpMainLinkButton}" />
    </Style>

    <Style x:Key="FlatTextBox" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="bg" BorderBrush="#818587" Background="White" BorderThickness="1" VerticalAlignment="Center" Padding="3 2">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="bg" Value="#727678"/>
                            <Setter Property="BorderThickness" TargetName="bg" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="bg" Value="#2c628b"/>
                            <Setter Property="BorderThickness" TargetName="bg" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" TargetName="bg" Value="#adb2b5"/>
                            <Setter Property="BorderThickness" TargetName="bg" Value="1"/>
                            <Setter Property="Background" TargetName="bg" Value="#eeeeee"/>
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SlideViewStyle" BasedOn="{x:Null}" TargetType="{x:Type ctl:SlideView}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctl:SlideView}">
                    <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="Selected" Value="False">
                            <Setter Property="Margin" Value="5000"/>
                            <Setter Property="Opacity" Value="0.0"/>
                        </Trigger>
                        <Trigger Property="Selected" Value="True">
                            <Setter Property="Margin" Value="10"/>
                            <Setter Property="Opacity" Value="0.0"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CommandButton" BasedOn="{StaticResource MetroButton}" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="0,0,0,10"/>
        <Setter Property="FontSize" Value="13"/>
    </Style>
    
    <Style x:Key="SvcStyle" TargetType="{x:Type ctl:ServiceSelector}">
        <Setter Property="Focusable" Value="False"/>
    </Style>

    <Style x:Key="btnServiceStyle" BasedOn="{StaticResource MetroButton}" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="5,2"/>
        <Setter Property="FontSize" Value="13"/>
    </Style>

    <Style x:Key="btnAccunting" BasedOn="{StaticResource CommandButton}" TargetType="{x:Type Button}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=grdUsers, Path=SelectedItem}" Value="{x:Null}">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
       
    <!--_____________________________________________________________________________________________________________________________________________-->

    <ControlTemplate x:Key="tmpServiceSelector" TargetType="{x:Type ctl:ServiceSelector}">
        <Grid Margin="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="{TemplateBinding LabelWidth}"/>
            </Grid.ColumnDefinitions>

            <TextBox Grid.Column="0" Style="{StaticResource FlatTextBox}" MaxLength="{TemplateBinding MaxLength}" 
                     Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsEnabled="{TemplateBinding Checked}" FlowDirection="LeftToRight"/>
            <CheckBox Grid.Column="2" FontSize="12" IsChecked="{Binding Checked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                      VerticalAlignment="Center" VerticalContentAlignment="Center" Content="{TemplateBinding LabelText}" FlowDirection="LeftToRight"/>
        </Grid>

    </ControlTemplate>


    <ControlTemplate x:Key="tmpLabeledInput" TargetType="{x:Type ctl:ServiceSelector}">
        <Grid Margin="3" Focusable="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{TemplateBinding LabelWidth}"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <TextBox Grid.Column="2" Style="{StaticResource FlatTextBox}" MaxLength="{TemplateBinding MaxLength}" 
                     Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, NotifyOnValidationError=True}"
                      IsEnabled="{TemplateBinding Checked}"
                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" FlowDirection="LeftToRight"/>
            <Label Grid.Column="0" FontSize="12" HorizontalAlignment="Right" Focusable="False"
                      VerticalAlignment="Center" VerticalContentAlignment="Center" Content="{TemplateBinding LabelText}" FlowDirection="{TemplateBinding LabelDirection}"/>
        </Grid>

    </ControlTemplate>


    <Style x:Key="RtlServiceSelector" TargetType="{x:Type ctl:ServiceSelector}">
        <Setter Property="FlowDirection" Value="RightToLeft"/>
        <Setter Property="LabelDirection" Value="RightToLeft"/>
        <Setter Property="LabelWidth" Value="75"/>
        <Setter Property="Checked" Value="True"/>
        <Setter Property="MaxLength" Value="150"/>
        <Setter Property="NumericTextBox" Value="False"/>
        <Setter Property="Template" Value="{StaticResource tmpLabeledInput}"/>
    </Style>

    <Style x:Key="LtrServiceSelector" TargetType="{x:Type ctl:ServiceSelector}">
        <Setter Property="FlowDirection" Value="LeftToRight"/>
        <Setter Property="LabelDirection" Value="LeftToRight"/>
        <Setter Property="LabelWidth" Value="150"/>
        <Setter Property="Checked" Value="True"/>
        <Setter Property="MaxLength" Value="200"/>
        <Setter Property="NumericTextBox" Value="False"/>
        <Setter Property="Template" Value="{StaticResource tmpLabeledInput}"/>
    </Style>
    
</ResourceDictionary>